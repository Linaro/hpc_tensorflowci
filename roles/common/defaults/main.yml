---
arch: "aarch64"
distribution: "el{{ ansible_distribution_major_version|int }}"

python3: "/usr/bin/python3"
user: "builder"
build_id: "42"
dir_root: "/home/{{ user }}/{{ build_id }}"
dir_home: "{{ dir_root }}/tensorflow_build"
dir_repo: "{{ dir_root }}/repo_tensorflow"
dir_built: "{{ dir_root }}/built_tarballs"
venv_path: "{{ dir_root }}/virtualenv"
use_openhpc: "{{ true if ansible_os_family == 'RedHat' and ansible_distribution_major_version|int < 8 else false }}"

# rpm build variables
dir_rpmbuilt: "/home/{{ user }}/rpmbuild/RPMS/{{ arch }}"
dir_rpmbuild_sources: "/home/{{ user }}/rpmbuild/SOURCES/"


# NumPy variables
# See : https://github.com/ansible/ansible/issues/8603 
# (No it's not "resolved", it's "bad design we can't fix")
numpy_version: "1.17.4"
numpy_dir_base: "{{ dir_home }}/numpy/{{ numpy_version}}"
numpy_dir_src: "{{ numpy_dir_base }}/numpy-{{ numpy_version }}"
numpy_dir_output: "{{ numpy_dir_src }}/dist"
numpy:
       release_url: "https://github.com/numpy/numpy/releases/download/v{{ numpy_version }}/numpy-{{ numpy_version }}.zip"
       release_zip: "numpy-{{ numpy_version }}.zip"
       release_sha256: "a0678793096205a4d784bd99f32803ba8100f639cf3b932dc63b21621390ea7e"
       wheel: "{{ numpy_dir_output }}/numpy-{{ numpy_version }}-cp36-cp36m-linux_aarch64.whl"
       patching_required: true
       patch: 'numpy_centos7_aarch64.patch'
       built_tarball: "numpy_{{ numpy_version }}_{{ build_id }}.tar.gz"

# TensorFlow variables
tensorflow_version: "1.15.0"
tensorflow_dir_base: "{{ dir_home }}/tensorflow/{{ tensorflow_version}}"
tensorflow_dir_src: "{{ tensorflow_dir_base }}/tensorflow-{{ tensorflow_version }}"
tensorflow_configure: "{{ tensorflow_dir_src }}/configure"
tensorflow_dir_output: "/tmp/tensorflow_pkg"
tensorflow:
       release_url: "https://github.com/tensorflow/tensorflow/archive/v{{ tensorflow_version }}.zip"
       release_zip: "tensorflow-{{ tensorflow_version }}.zip"
       wheel: "{{ tensorflow_dir_output }}/tensorflow-{{ tensorflow_version }}-cp36-cp36m-linux_{{ arch }}.whl"
       patching_required: true
       patch: 'patch_bazelbuild.patch'
       built_tarball: "tensorflow_{{ tensorflow_version }}_{{ build_id }}.tar.gz"
       cxx_optimizations:
               - "-D_GLIBCXX_USE_CXX11_ABI=0"
       c_optimizations:
               - "-funsafe-math-optimizations"
               - "-ftree-vectorize"
               - "-fomit-frame-pointer"

# Bazel variables
build_bazel: true

bazel_version: "0.26.1"
bazel_minorversion: "0"
bazel_rpm: "{{ dir_rpmbuilt }}/bazel-{{ bazel_version }}-{{ bazel_minorversion }}.{{ distribution }}.{{ arch }}.rpm"
bazel_dir_base: "{{ dir_home }}/bazel"
bazel_dir_src: "{{ bazel_dir_base }}/{{ bazel_version}}"
bazel_dir_output: "{{ bazel_dir_src }}/output"
bazel:
       release_url: "https://github.com/bazelbuild/bazel/releases/download/{{ bazel_version }}/bazel-{{ bazel_version }}-dist.zip"
       release_zip: "bazel-{{ bazel_version }}-dist.zip"
       binary: "{{ bazel_dir_output }}/bazel"
       patching_required: false

# OpenBlas variables
build_openblas: true

openblas_version: "0.3.8a"
openblas_minorversion: "1.ohpc.1.3.6"
openhpc_openblas_version: "0.3.6"
openblas_rpm: "{{ dir_rpmbuilt }}/openblas-gnu8-ohpc-{{ openblas_version }}-{{ openblas_minorversion }}.{{ arch }}.rpm"
openblas_dir_base: "{{ dir_home }}/openblas"
openblas_dir_src: "{{ openblas_dir_base }}/{{ openblas_version}}"
openblas_dir_output: "{{ openblas_dir_src }}/output"
openblas_target_micro: "ARMV8"
openblas_additional_flags: ""
openblas:
       release_url: "https://github.com/xianyi/OpenBLAS/archive/develop.zip"
       release_zip: "openblas-develop.zip"
       binary: "{{ openblas_dir_output }}/openblas"
       patching_required: false

# OHPC Variables
ohpc_raw_github_baseurl: "https://raw.githubusercontent.com/openhpc/ohpc/obs/OpenHPC_1.3.9_Factory"

ohpc_toolchain_base_dir: "/opt/ohpc/pub/compiler/gcc/8.3.0"
ohpc_toolchain_bin_dir: "/opt/ohpc/pub/compiler/gcc/8.3.0/bin"
ohpc_toolchain_lib_dir: "{{ ohpc_toolchain_base_dir }}/lib64"
ohpc_toolchain_include_dir: "{{ ohpc_toolchain_base_dir }}/include"

toolchain_base_dir: "{{ ohpc_toolchain_base_dir if use_openhpc == true else '/usr/bin/' }}"
toolchain_bin_dir: "{{ ohpc_toolchain_bin_dir if use_openhpc == true else toolchain_base_dir }}"
toolchain_lib_dir: "{{ ohpc_toolchain_lib_dir if use_openhpc == true else '/usr/lib64/' }}"
toolchain_include_dir: "{{ ohpc_toolchain_include_dir if use_openhpc == true else '/usr/include/' }}"

_openblas_library_path: "/opt/ohpc/pub/libs/gnu8/openblas/{{ openblas_version if build_openblas == true else openhpc_openblas_version }}/lib"
_openblas_include_path: "/opt/ohpc/pub/libs/gnu8/openblas/{{ openblas_version if build_openblas == true else openhpc_openblas_version }}/include"

openblas_library_path: "{{ _openblas_library_path if use_openhpc == true else toolchain_lib_dir }}"
openblas_include_path: "{{ _openblas_include_path if use_openhpc == true else toolchain_include_dir }}"


_fftw_library_path: "/opt/ohpc/pub/libs/gnu8/openmpi3/fftw/3.3.8/lib"
_fftw_include_path: "/opt/ohpc/pub/libs/gnu8/openmpi3/fftw/3.3.8/include"

fftw_library_path: "{{ _fftw_library_path if use_openhpc == true else toolchain_lib_dir }}"
fftw_include_path: "{{ _fftw_include_path if use_openhpc == true else toolchain_include_dir }}"


_hdf5_base_path: "/opt/ohpc/pub/libs/gnu8/hdf5/1.10.5"
_hdf5_library_path: "{{ _hdf5_base_path }}/lib"
_hdf5_include_path: "{{ _hdf5_base_path }}/include"

hdf5_base_path: "{{ _hdf5_base_path if use_openhpc == true else toolchain_lib_dir }}"
hdf5_include_path: "{{ _hdf5_include_path if use_openhpc == true else toolchain_include_dir }}"
hdf5_library_path: "{{ _hdf5_library_path if use_openhpc == true else toolchain_lib_dir }}"


_mpi_base_path: "/opt/ohpc/pub/mpi/openmpi3-gnu8/3.1.4"
_mpi_library_path: "{{ _mpi_base_path }}/lib"

mpi_base_path: "{{ _mpi_base_path if use_openhpc == true else '/usr/lib64/openmpi/' }}"
mpi_library_path: "{{ _mpi_library_path if use_openhpc == true else '/usr/lib64/openmpi/lib' }}"


LD_LIBRARY_PATH: "{{ hdf5_library_path }}:{{ openblas_library_path }}:{{ mpi_library_path }}:{{ toolchain_lib_dir }}"
LD_INCLUDE_PATH: "{{ hdf5_include_path }}:{{ openblas_include_path }}:{{ mpi_base_path }}/include:{{ toolchain_include_dir }}"

### BUILD DEPENDENCIES
# Non OHPC, non python, non java
tf_build_dependencies:
        - "@Development Tools"
        - cmake
        - createrepo
        - rpm-build
        - vim
        - wget
        - unzip
        - tar
        - redhat-lsb-core

ohpc_release_url: "http://build.openhpc.community/OpenHPC:/1.3/CentOS_7/aarch64/ohpc-release-1.3-1.el7.aarch64.rpm"

tf_build_noohpc_dependencies:
        - openmpi
        - openmpi-devel
        - fftw
        - fftw-devel
        - hdf5
        - hdf5-devel
        - perl-devel
        - multilib-rpm-config
        - execstack

tf_build_ohpc_dependencies:
        - lmod-ohpc
        - openmpi3-gnu8-ohpc
        - ohpc-gnu8-perf-tools
        - ohpc-buildroot
        - ohpc-gnu8-io-libs
        - ohpc-gnu8-python-libs
        - ohpc-gnu8-runtimes
        - ohpc-gnu8-serial-libs
        - ohpc-gnu8-parallel-libs
        - fftw-gnu8-openmpi3-ohpc
        - lmod-defaults-gnu8-openmpi3-ohpc

tf_build_java:
        - java-11-openjdk
        - java-11-openjdk-devel

tf_build_py3_dependencies:
        - pip
        - Cython
        - six
        - wheel
        - setuptools
        - mock
        - "future>=0.17.1"

tf_build_keras:
        - "keras_applications==1.0.6"
        - "keras_preprocessing==1.0.5"
